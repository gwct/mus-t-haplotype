xlab("Position") +
ggtitle("Chromosome 17") +
theme_classic() +
theme(axis.text=element_text(size=14),
axis.title.x=element_text(size=12),
#axis.text.x = element_text(angle=45, vjust=0.5, hjust=1),
axis.title.y=element_text(size=16, angle=0, vjust=0.5),
axis.line.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="none",
legend.key.width = unit(0.75,  unit = "cm"),
legend.spacing.x = unit(0.25, 'cm'),
legend.title = element_blank(),
legend.text=element_text(size=12),
plot.title = element_text(hjust=0.5, size=16),
plot.margin = unit(c(0,0,0,0), "cm")
)
print(fig_2c)
fig_2c = ggplot(chrdata, aes(x=start, y=ystart, color=col.cat)) +
geom_rect(aes(ymin=ystart, ymax=yend, xmin=start,xmax=end)) +
#geom_segment(aes(x=start, y=ystart, xend=start, yend=yend)) +
scale_color_manual(values=cols_labs) +
scale_y_continuous(limits=c(0,4), breaks=0.5:3.5, labels=c("Other", "3", "2", "1")) +
scale_x_continuous(limits=c(0,chr_len), breaks=seq(0,chr_len,by=chr_len/10), expand=c(0,0), labels = scales::scientific) +
# geom_hline(yintercept=2,color="black") +
ylab("Rank") +
xlab("Position") +
ggtitle("Chromosome 17") +
theme_classic() +
theme(axis.text=element_text(size=14),
axis.title.x=element_text(size=12),
axis.text.x = element_text(angle=45, vjust=1, hjust=1),
axis.title.y=element_text(size=16, angle=0, vjust=0.5),
axis.line.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="none",
legend.key.width = unit(0.75,  unit = "cm"),
legend.spacing.x = unit(0.25, 'cm'),
legend.title = element_blank(),
legend.text=element_text(size=12),
plot.title = element_text(hjust=0.5, size=16),
plot.margin = unit(c(0,0,0,0), "cm")
)
print(fig_2c)
fig_2c = ggplot(chrdata, aes(x=start, y=ystart, color=col.cat)) +
geom_rect(aes(ymin=ystart, ymax=yend, xmin=start,xmax=end)) +
#geom_segment(aes(x=start, y=ystart, xend=start, yend=yend)) +
scale_color_manual(values=cols_labs) +
scale_y_continuous(limits=c(0,4), breaks=0.5:3.5, labels=c("Other", "3", "2", "1")) +
scale_x_continuous(limits=c(0,chr_len), breaks=seq(0,chr_len,by=chr_len/10), expand=c(0,0), labels = scales::scientific) +
# geom_hline(yintercept=2,color="black") +
ylab("Rank") +
xlab("Position") +
ggtitle("Chromosome 17") +
theme_classic() +
theme(axis.text=element_text(size=14),
axis.title.x=element_text(size=12),
axis.text.x = element_text(angle=25, vjust=1, hjust=1),
axis.title.y=element_text(size=16, angle=0, vjust=0.5),
axis.line.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="none",
legend.key.width = unit(0.75,  unit = "cm"),
legend.spacing.x = unit(0.25, 'cm'),
legend.title = element_blank(),
legend.text=element_text(size=12),
plot.title = element_text(hjust=0.5, size=16),
plot.margin = unit(c(0,0,0,0), "cm")
)
print(fig_2c)
fig_2c = ggplot(chrdata, aes(x=start, y=ystart, color=col.cat)) +
geom_rect(aes(ymin=ystart, ymax=yend, xmin=start,xmax=end)) +
#geom_segment(aes(x=start, y=ystart, xend=start, yend=yend)) +
scale_color_manual(values=cols_labs) +
scale_y_continuous(limits=c(0,4), breaks=0.5:3.5, labels=c("Other", "3", "2", "1")) +
scale_x_continuous(limits=c(0,chr_len), breaks=seq(0,chr_len,by=chr_len/10), expand=c(0,0)) +
# geom_hline(yintercept=2,color="black") +
ylab("Rank") +
xlab("Position") +
ggtitle("Chromosome 17") +
theme_classic() +
theme(axis.text=element_text(size=14),
axis.title.x=element_text(size=12),
axis.text.x = element_text(angle=25, vjust=1, hjust=1),
axis.title.y=element_text(size=16, angle=0, vjust=0.5),
axis.line.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="none",
legend.key.width = unit(0.75,  unit = "cm"),
legend.spacing.x = unit(0.25, 'cm'),
legend.title = element_blank(),
legend.text=element_text(size=12),
plot.title = element_text(hjust=0.5, size=16),
plot.margin = unit(c(0,0,0,0), "cm")
)
print(fig_2c)
fig_2c = ggplot(chrdata, aes(x=start, y=ystart, color=col.cat)) +
geom_rect(aes(ymin=ystart, ymax=yend, xmin=start,xmax=end)) +
#geom_segment(aes(x=start, y=ystart, xend=start, yend=yend)) +
scale_color_manual(values=cols_labs) +
scale_y_continuous(limits=c(0,4), breaks=0.5:3.5, labels=c("Other", "3", "2", "1")) +
scale_x_continuous(limits=c(0,chr_len), breaks=seq(0,chr_len,by=chr_len/10), expand=c(0,0)) +
# geom_hline(yintercept=2,color="black") +
ylab("Rank") +
xlab("Position") +
ggtitle("Chromosome 17") +
theme_classic() +
theme(axis.text.x=element_text(size=10),
axis.title.x=element_text(size=12),
axis.text.x = element_text(angle=25, vjust=1, hjust=1),
axis.text.y=element_text(size=14),
axis.title.y=element_text(size=16, angle=0, vjust=0.5),
axis.line.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="none",
legend.key.width = unit(0.75,  unit = "cm"),
legend.spacing.x = unit(0.25, 'cm'),
legend.title = element_blank(),
legend.text=element_text(size=12),
plot.title = element_text(hjust=0.5, size=16),
plot.margin = unit(c(0,0,0,0), "cm")
)
print(fig_2c)
fig_2c = ggplot(chrdata, aes(x=start, y=ystart, color=col.cat)) +
geom_rect(aes(ymin=ystart, ymax=yend, xmin=start,xmax=end)) +
#geom_segment(aes(x=start, y=ystart, xend=start, yend=yend)) +
scale_color_manual(values=cols_labs) +
scale_y_continuous(limits=c(0,4), breaks=0.5:3.5, labels=c("Other", "3", "2", "1")) +
scale_x_continuous(limits=c(0,chr_len), breaks=seq(0,chr_len,by=chr_len/10), expand=c(0,0)) +
# geom_hline(yintercept=2,color="black") +
ylab("Rank") +
xlab("Position") +
ggtitle("Chromosome 17") +
theme_classic() +
theme(
axis.title.x=element_text(size=12),
axis.text.x = element_text(size=10, angle=25, vjust=1, hjust=1),
axis.text.y=element_text(size=14),
axis.title.y=element_text(size=16, angle=0, vjust=0.5),
axis.line.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="none",
legend.key.width = unit(0.75,  unit = "cm"),
legend.spacing.x = unit(0.25, 'cm'),
legend.title = element_blank(),
legend.text=element_text(size=12),
plot.title = element_text(hjust=0.5, size=16),
plot.margin = unit(c(0,0,0,0), "cm")
)
print(fig_2c)
fig_2c = ggplot(chrdata, aes(x=start, y=ystart, color=col.cat)) +
geom_rect(aes(ymin=ystart, ymax=yend, xmin=start,xmax=end)) +
#geom_segment(aes(x=start, y=ystart, xend=start, yend=yend)) +
scale_color_manual(values=cols_labs) +
scale_y_continuous(limits=c(0,4), breaks=0.5:3.5, labels=c("Other", "3", "2", "1")) +
scale_x_continuous(limits=c(0,chr_len), breaks=seq(0,chr_len,by=chr_len/10), expand=c(0,0)) +
# geom_hline(yintercept=2,color="black") +
ylab("Rank") +
xlab("Position") +
ggtitle("Chromosome 17") +
theme_classic() +
theme(axis.title.x=element_text(size=12),
axis.text.x = element_text(size=10, angle=25, vjust=1, hjust=1),
axis.text.y=element_text(size=14),
axis.title.y=element_text(size=16, angle=0, vjust=0.5),
axis.line.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="none",
legend.key.width = unit(0.75,  unit = "cm"),
legend.spacing.x = unit(0.25, 'cm'),
legend.title = element_blank(),
legend.text=element_text(size=12),
plot.title = element_text(hjust=0.5, size=16),
plot.margin = unit(c(0,0,0,0), "cm")
)
print(fig_2c)
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
chr_len / 5000000
chr_len / 10000000
chr_len / 5000000
seq(0,chr_len,by=5000000)
fig_2c = ggplot(chrdata, aes(x=start, y=ystart, color=col.cat)) +
geom_rect(aes(ymin=ystart, ymax=yend, xmin=start,xmax=end)) +
#geom_segment(aes(x=start, y=ystart, xend=start, yend=yend)) +
scale_color_manual(values=cols_labs) +
scale_y_continuous(limits=c(0,4), breaks=0.5:3.5, labels=c("Other", "3", "2", "1")) +
scale_x_continuous(limits=c(0,chr_len), breaks=seq(0,chr_len,by=5000000), expand=c(0,0)) +
# geom_hline(yintercept=2,color="black") +
ylab("Rank") +
xlab("Position") +
ggtitle("Chromosome 17") +
theme_classic() +
theme(axis.title.x=element_text(size=12),
axis.text.x = element_text(size=10, angle=25, vjust=1, hjust=1),
axis.text.y=element_text(size=14),
axis.title.y=element_text(size=16, angle=0, vjust=0.5),
axis.line.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="none",
legend.key.width = unit(0.75,  unit = "cm"),
legend.spacing.x = unit(0.25, 'cm'),
legend.title = element_blank(),
legend.text=element_text(size=12),
plot.title = element_text(hjust=0.5, size=16),
plot.margin = unit(c(0,0,0,0), "cm")
)
print(fig_2c)
chr_breaks_5mb = seq(0,chr_len,by=5000000)
chr_labels_5mb = c()
first = TRUE
for(i in chr_breaks_5mb){
if(first){
first = FALSE
chr_labels_5mb = c(chr_labels_5mb, "")
next
}
chr_label = paste0(i * 5, "Mb")
chr_labels_5mb = c(chr_labels_5mb, chr_label)
}
cat(as.character(Sys.time()), " | Fig2C: Rendering chromoplot\n")
fig_2c = ggplot(chrdata, aes(x=start, y=ystart, color=col.cat)) +
geom_rect(aes(ymin=ystart, ymax=yend, xmin=start,xmax=end)) +
#geom_segment(aes(x=start, y=ystart, xend=start, yend=yend)) +
scale_color_manual(values=cols_labs) +
scale_y_continuous(limits=c(0,4), breaks=0.5:3.5, labels=c("Other", "3", "2", "1")) +
scale_x_continuous(limits=c(0,chr_len), breaks=chr_breaks_5mb, labels=chr_labels_5mb, expand=c(0,0)) +
# geom_hline(yintercept=2,color="black") +
ylab("Rank") +
xlab("Position") +
ggtitle("Chromosome 17") +
theme_classic() +
theme(axis.title.x=element_text(size=12),
axis.text.x = element_text(size=10, angle=25, vjust=1, hjust=1),
axis.text.y=element_text(size=14),
axis.title.y=element_text(size=16, angle=0, vjust=0.5),
axis.line.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="none",
legend.key.width = unit(0.75,  unit = "cm"),
legend.spacing.x = unit(0.25, 'cm'),
legend.title = element_blank(),
legend.text=element_text(size=12),
plot.title = element_text(hjust=0.5, size=16),
plot.margin = unit(c(0,0,0,0), "cm")
)
print(fig_2c)
i
chr_breaks_5mb = seq(0,chr_len,by=5000000)
chr_labels_5mb = c()
first = TRUE
label_num = 1
for(i in chr_breaks_5mb){
if(first){
first = FALSE
chr_labels_5mb = c(chr_labels_5mb, "")
next
}
label_str = paste0(label_num * 5, "Mb")
chr_labels_5mb = c(chr_labels_5mb, label_str)
label_num = label_num + 1
}
cat(as.character(Sys.time()), " | Fig2C: Rendering chromoplot\n")
fig_2c = ggplot(chrdata, aes(x=start, y=ystart, color=col.cat)) +
geom_rect(aes(ymin=ystart, ymax=yend, xmin=start,xmax=end)) +
#geom_segment(aes(x=start, y=ystart, xend=start, yend=yend)) +
scale_color_manual(values=cols_labs) +
scale_y_continuous(limits=c(0,4), breaks=0.5:3.5, labels=c("Other", "3", "2", "1")) +
scale_x_continuous(limits=c(0,chr_len), breaks=chr_breaks_5mb, labels=chr_labels_5mb, expand=c(0,0)) +
# geom_hline(yintercept=2,color="black") +
ylab("Rank") +
xlab("Position") +
ggtitle("Chromosome 17") +
theme_classic() +
theme(axis.title.x=element_text(size=12),
axis.text.x = element_text(size=10, angle=25, vjust=1, hjust=1),
axis.text.y=element_text(size=14),
axis.title.y=element_text(size=16, angle=0, vjust=0.5),
axis.line.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="none",
legend.key.width = unit(0.75,  unit = "cm"),
legend.spacing.x = unit(0.25, 'cm'),
legend.title = element_blank(),
legend.text=element_text(size=12),
plot.title = element_text(hjust=0.5, size=16),
plot.margin = unit(c(0,0,0,0), "cm")
)
print(fig_2c)
fig_2c = ggplot(chrdata, aes(x=start, y=ystart, color=col.cat)) +
geom_rect(aes(ymin=ystart, ymax=yend, xmin=start,xmax=end)) +
#geom_segment(aes(x=start, y=ystart, xend=start, yend=yend)) +
scale_color_manual(values=cols_labs) +
scale_y_continuous(limits=c(0,4), breaks=0.5:3.5, labels=c("Other", "3", "2", "1")) +
scale_x_continuous(limits=c(0,chr_len), breaks=chr_breaks_5mb, labels=chr_labels_5mb, expand=c(0,0)) +
# geom_hline(yintercept=2,color="black") +
ylab("Rank") +
xlab("Position") +
ggtitle("Chromosome 17") +
theme_classic() +
theme(axis.title.x=element_text(size=12),
axis.text.x = element_text(size=10),#, angle=25, vjust=1, hjust=1),
axis.text.y=element_text(size=14),
axis.title.y=element_text(size=16, angle=0, vjust=0.5),
axis.line.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="none",
legend.key.width = unit(0.75,  unit = "cm"),
legend.spacing.x = unit(0.25, 'cm'),
legend.title = element_blank(),
legend.text=element_text(size=12),
plot.title = element_text(hjust=0.5, size=16),
plot.margin = unit(c(0,0,0,0), "cm")
)
print(fig_2c)
chr_breaks_5mb = seq(0,chr_len,by=5000000)
chr_labels_5mb = c()
first = TRUE
label_num = 1
for(i in chr_breaks_5mb){
if(first){
first = FALSE
chr_labels_5mb = c(chr_labels_5mb, "")
next
}
#label_str = paste0(label_num * 5, "Mb")
chr_labels_5mb = c(chr_labels_5mb, label_num * 5)
label_num = label_num + 1
}
cat(as.character(Sys.time()), " | Fig2C: Rendering chromoplot\n")
fig_2c = ggplot(chrdata, aes(x=start, y=ystart, color=col.cat)) +
geom_rect(aes(ymin=ystart, ymax=yend, xmin=start,xmax=end)) +
#geom_segment(aes(x=start, y=ystart, xend=start, yend=yend)) +
scale_color_manual(values=cols_labs) +
scale_y_continuous(limits=c(0,4), breaks=0.5:3.5, labels=c("Other", "3", "2", "1")) +
scale_x_continuous(limits=c(0,chr_len), breaks=chr_breaks_5mb, labels=chr_labels_5mb, expand=c(0,0)) +
# geom_hline(yintercept=2,color="black") +
ylab("Rank") +
xlab("Position (Mb)") +
ggtitle("Chromosome 17") +
theme_classic() +
theme(axis.title.x=element_text(size=12),
axis.text.x = element_text(size=10),#, angle=25, vjust=1, hjust=1),
axis.text.y=element_text(size=14),
axis.title.y=element_text(size=16, angle=0, vjust=0.5),
axis.line.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="none",
legend.key.width = unit(0.75,  unit = "cm"),
legend.spacing.x = unit(0.25, 'cm'),
legend.title = element_blank(),
legend.text=element_text(size=12),
plot.title = element_text(hjust=0.5, size=16),
plot.margin = unit(c(0,0,0,0), "cm")
)
print(fig_2c)
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
boxplot(aln_stats$total.seqs - aln_stats$total.seqs.filter)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(ggplot2)
library(cowplot)
library(ggbeeswarm)
library(reshape2)
library(ggpubr)
#library(plyr)
library(dplyr)
library(kableExtra)
library(here)
library(viridis)
source("../lib/design.r")
total_spec = 6
windows = read.csv(here("data", "mm10-10kb-window-stats.tsv"), header=T, comment.char="#", sep="\t")
len = select(windows, window, scaffold, aln.len)
len$label = "Pre-filter"
len_f = select(windows, window, scaffold, aln.len.filter)
len_f$label = "Post-filter"
names(len_f)[3] = "aln.len"
len_data = rbind(len, len_f)
len_data$label = factor(len_data$label, levels=c("Pre-filter", "Post-filter"))
len_p = ggplot(len_data, aes(x=label, y=aln.len, fill=label)) +
#geom_quasirandom(size=2, width=0.25, alpha=0.1, color="#666666") +
geom_violin(alpha=0.5) +
geom_boxplot(outlier.shape=NA, alpha=0, width=0.1, color="#000000") +
#geom_point(data=aln_means, aes(x=label, y=avg.length, group=dataset), size=2, color="red", position=dodge, show.legend=FALSE) +
#geom_point(data=aln_means, aes(x=label, y=median.length, group=dataset), size=2, color="blue", position=dodge, show.legend=FALSE) +
ylab("Alignment lengths") +
xlab("") +
scale_fill_manual(values=corecol(pal="wilke")) +
bartheme() +
theme(legend.position="none")
print(len_p)
#aln_means %>% kable() %>% kable_styling(bootstrap_options=c("striped", "condended", "responsive"), full_width=F)
gap_sites = select(windows, window, scaffold, sites.high.gap, aln.len)
gap_sites$label = "Pre-filter"
gap_sites_f = select(windows, window, scaffold, sites.high.gap.filter, aln.len.filter)
gap_sites_f$label = "Post-filter"
names(gap_sites_f)[3] = "sites.high.gap"
names(gap_sites_f)[4] = "aln.len"
gap_sites_data = rbind(gap_sites, gap_sites_f)
gap_sites_data$perc.gap.sites = gap_sites_data$sites.high.gap / gap_sites_data$aln.len
gap_sites_data$label = factor(gap_sites_data$label, levels=c("Pre-filter", "Post-filter"))
gap_sites_p = ggplot(gap_sites_data, aes(x=label, y=perc.gap.sites, fill=label)) +
#geom_quasirandom(size=2, width=0.25, alpha=0.1, color="#666666") +
geom_violin(alpha=0.5) +
geom_boxplot(outlier.shape=NA, alpha=0, width=0.1, color="#000000") +
#geom_point(data=aln_means, aes(x=label, y=avg.length, group=dataset), size=2, color="red", position=dodge, show.legend=FALSE) +
#geom_point(data=aln_means, aes(x=label, y=median.length, group=dataset), size=2, color="blue", position=dodge, show.legend=FALSE) +
ylab("% sites >50% gap\nper 10kb window") +
xlab("") +
scale_fill_manual(values=corecol(pal="wilke")) +
bartheme() +
theme(legend.position="none")
print(gap_sites_p)
#aln_means %>% kable() %>% kable_styling(bootstrap_options=c("striped", "condended", "responsive"), full_width=F)
inf_sites = select(windows, window, scaffold, informative.sites, aln.len)
inf_sites$label = "Pre-filter"
inf_sites_f = select(windows, window, scaffold, informative.sites.filter, aln.len.filter)
inf_sites_f$label = "Post-filter"
names(inf_sites_f)[3] = "informative.sites"
names(inf_sites_f)[4] = "aln.len"
inf_sites_data = rbind(inf_sites, inf_sites_f)
inf_sites_data$perc.inf.sites = inf_sites_data$informative.sites / inf_sites_data$aln.len
inf_sites_data$label = factor(inf_sites_data$label, levels=c("Pre-filter", "Post-filter"))
inf_sites_p = ggplot(inf_sites_data, aes(x=label, y=perc.inf.sites, fill=label)) +
#geom_quasirandom(size=2, width=0.25, alpha=0.1, color="#666666") +
geom_violin(alpha=0.5) +
geom_boxplot(outlier.shape=NA, alpha=0, width=0.1, color="#000000") +
#geom_point(data=aln_means, aes(x=label, y=avg.length, group=dataset), size=2, color="red", position=dodge, show.legend=FALSE) +
#geom_point(data=aln_means, aes(x=label, y=median.length, group=dataset), size=2, color="blue", position=dodge, show.legend=FALSE) +
ylab("% of sites that are informative\nper 10kb window") +
xlab("") +
scale_fill_manual(values=corecol(pal="wilke")) +
bartheme() +
theme(legend.position="none")
print(inf_sites_p)
#aln_means %>% kable() %>% kable_styling(bootstrap_options=c("striped", "condended", "responsive"), full_width=F)
inv_sites = select(windows, window, scaffold, invariant.sites, aln.len)
inv_sites$label = "Pre-filter"
inv_sites_f = select(windows, window, scaffold, invariant.sites.filter, aln.len.filter)
inv_sites_f$label = "Post-filter"
names(inv_sites_f)[3] = "invariant.sites"
names(inv_sites_f)[4] = "aln.len"
inv_sites_data = rbind(inv_sites, inv_sites_f)
inv_sites_data$perc.inv.sites = inv_sites_data$invariant.sites / inv_sites_data$aln.len
inv_sites_data$label = factor(inv_sites_data$label, levels=c("Pre-filter", "Post-filter"))
inf_sites_p = ggplot(inv_sites_data, aes(x=label, y=perc.inv.sites, fill=label)) +
#geom_quasirandom(size=2, width=0.25, alpha=0.1, color="#666666") +
geom_violin(alpha=0.5) +
geom_boxplot(outlier.shape=NA, alpha=0, width=0.1, color="#000000") +
#geom_point(data=aln_means, aes(x=label, y=avg.length, group=dataset), size=2, color="red", position=dodge, show.legend=FALSE) +
#geom_point(data=aln_means, aes(x=label, y=median.length, group=dataset), size=2, color="blue", position=dodge, show.legend=FALSE) +
ylab("% of sites that are invariant\nper 10kb window") +
xlab("") +
scale_fill_manual(values=corecol(pal="wilke")) +
bartheme() +
theme(legend.position="none")
print(inf_sites_p)
#aln_means %>% kable() %>% kable_styling(bootstrap_options=c("striped", "condended", "responsive"), full_width=F)
missing_p = ggplot(windows, aes(x=seqs.above.missing.filter)) +
#geom_quasirandom(size=2, width=0.25, alpha=0.1, color="#666666") +
#geom_violin(alpha=0.5) +
#geom_boxplot(alpha=0.5, width=0.5, color="#000000") +
#geom_point(data=aln_means, aes(x=label, y=avg.length, group=dataset), size=2, color="red", position=dodge, show.legend=FALSE) +
#geom_point(data=aln_means, aes(x=label, y=median.length, group=dataset), size=2, color="blue", position=dodge, show.legend=FALSE) +
geom_histogram(fill="#920000") +
xlab("# of missing sequences\nper 10kb window") +
ylab("") +
scale_y_continuous(expand=c(0,0)) +
#scale_fill_manual(labels=c("16 species", "19 species"), values=corecol()) +
bartheme() +
theme(legend.position="none")
print(missing_p)
#aln_means %>% kable() %>% kable_styling(bootstrap_options=c("striped", "condended", "responsive"), full_width=F)
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
window_title = paste("Rodent phylogenies: ", window_size, "kb windows on ", chrome_str, sep="")
window_subtitle = paste("Chrome length: ", chr_len, "bp, showing ", used_windows, " of ", total_windows, " windows, ", num_topos, " topologies", sep="")
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
print(fig_2b)
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
top_topos
j
top_topos[j]
cur_tree_raw = as.character(all_windows_f[all_windows_f$topo.rank.overall==cur_topo,]$topo[1])
cur_tree_raw
cur_tree
cur_fig
tree_figs[[j]]
length(tree_figs)
cur_fig
print(cur_fig)
tree_figs[[j]]
tree_figs[[2]]
tree_figs[[3]]
tree_figs[[1]]
r
cur_fig = ggtree(cur_tree, size=1.5, ladderize=T) +
xlim_tree(7) +
ggplot2::ylim(0, 8) +
ggplot2::xlim(0, 18) +
geom_tiplab(color="#333333", fontface='italic', size=4) +
theme(plot.margin = unit(c(0,1,0,0), "cm"))
cur_fig
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
