scores_fig = plot_grid(scores_fig_top, leg, nrow=2, rel_heights=c(1,0.1))
print(scores_fig)
####################
#rlist = readGrampa(16, "astral-multi", 90, "hcsp", "ASTRAL-Multi")
#multi_hcsp_16 = rlist[[1]]; multi_hcsp_dups_16 = rlist[[2]]
rlist = readGrampa(16, "ballesteros", 90, "hcsp", "Ballesteros")
bal_hcsp_16 = rlist[[1]]; bal_hcsp_dups_16 = rlist[[2]]
rlist = readGrampa(16, "traditional", 90, "hcsp", "Horseshoe crabs sister")
trad_hcsp_16 = rlist[[1]]; trad_hcsp_dups_16 = rlist[[2]]
grampa_data_16 = rbind(bal_hcsp_16, trad_hcsp_16)
grampa_data_st_16 = grampa_data_16 %>% filter(mul.tree == 0)
grampa_data_auto_16 = grampa_data_16 %>% filter(h1.node == h2.node & mul.tree != 0)
cols = corecol(numcol=3, pal="wilke")
names(cols) = c("ASTRAL-Multi", "Ballesteros", "Horseshoe crabs sister")
####################
scores_fig_16 = ggplot(grampa_data_16, aes(x=rank, y=score, color=label)) +
geom_point(size=2, alpha=0.33, show.legend=F) +
geom_point(data=grampa_data_st_16, aes(x=rank, y=score), size=3, alpha=0.75, color="#333333", fill="#999999") +
geom_point(data=grampa_data_auto_16, aes(x=rank, y=score, color=label), size=5, alpha=0.5) +
scale_x_continuous(limits=c(-10,max(grampa_data_16$rank)+10)) +
scale_color_manual(values=cols) +
xlab("Rank") +
ylab("GRAMPA score") +
bartheme() +
theme(legend.position="bottom")
#print(scores_fig_16)
# Plot scores
####################
####################
#rlist = readGrampa(16, "astral-multi", 90, "hcsp", "ASTRAL-Multi")
#multi_hcsp_16 = rlist[[1]]; multi_hcsp_dups_16 = rlist[[2]]
rlist = readGrampa(18, "ballesteros", 90, "hcsp", "Ballesteros")
bal_hcsp_18 = rlist[[1]]; bal_hcsp_dups_18 = rlist[[2]]
rlist = readGrampa(18, "traditional", 90, "hcsp", "Horseshoe crabs sister")
trad_hcsp_18 = rlist[[1]]; trad_hcsp_dups_18 = rlist[[2]]
grampa_data_18 = rbind(bal_hcsp_18, trad_hcsp_18)
grampa_data_st_18 = grampa_data_18 %>% filter(mul.tree == 0)
grampa_data_auto_18 = grampa_data_18 %>% filter(h1.node == h2.node & mul.tree != 0)
cols = corecol(numcol=3, pal="wilke")
names(cols) = c("ASTRAL-Multi", "Ballesteros", "Horseshoe crabs sister")
####################
scores_fig_18 = ggplot(grampa_data_18, aes(x=rank, y=score, color=label)) +
geom_point(size=2, alpha=0.33, show.legend=F) +
geom_point(data=grampa_data_st_18, aes(x=rank, y=score), size=3, alpha=0.75, color="#333333", fill="#999999") +
geom_point(data=grampa_data_auto_18, aes(x=rank, y=score, color=label), size=5, alpha=0.5) +
scale_x_continuous(limits=c(-10,max(grampa_data_18$rank)+10)) +
scale_color_manual(values=cols) +
xlab("Rank") +
ylab("GRAMPA score") +
bartheme() +
theme(legend.position="bottom")
print(scores_fig_18)
# Plot scores
####################
####################
rlist = readGrampa(19, "astral-multi", 90, "hcsp", "ASTRAL-Multi")
multi_hcsp_19 = rlist[[1]]; multi_hcsp_dups_19 = rlist[[2]]
rlist = readGrampa(19, "ballesteros", 90, "hcsp", "Ballesteros")
bal_hcsp_19 = rlist[[1]]; bal_hcsp_dups_19 = rlist[[2]]
rlist = readGrampa(19, "traditional", 90, "hcsp", "Horseshoe crabs sister")
trad_hcsp_19 = rlist[[1]]; trad_hcsp_dups_19 = rlist[[2]]
grampa_data_19 = rbind(multi_hcsp_19, bal_hcsp_19, trad_hcsp_19)
grampa_data_st_19 = grampa_data_19 %>% filter(mul.tree == 0)
grampa_data_auto_19 = grampa_data_19 %>% filter(h1.node == h2.node & mul.tree != 0)
####################
scores_fig_19 = ggplot(grampa_data_19, aes(x=rank, y=score, color=label)) +
geom_point(size=2, alpha=0.33, show.legend=F) +
geom_point(data=grampa_data_st_19, aes(x=rank, y=score), size=3, alpha=0.75, color="#333333", fill="#999999") +
geom_point(data=grampa_data_auto_19, aes(x=rank, y=score, color=label), size=5, alpha=0.5) +
scale_x_continuous(limits=c(-10,max(grampa_data_19$rank)+10)) +
scale_color_manual(values=cols) +
xlab("Rank") +
ylab("GRAMPA score") +
bartheme() +
theme(legend.position="bottom")
#print(scores_fig_19)
# Plot scores
####################
leg = get_legend(scores_fig_19)
scores_fig_top = plot_grid(scores_fig_16 + theme(legend.position="none"),
scores_fig_18 + theme(legend.position="none"),
scores_fig_19 + theme(legend.position="none"),
ncol=3, labels=c("16 species", "18 species", "19 species"))
scores_fig = plot_grid(scores_fig_top, leg, nrow=2, rel_heights=c(1,0.1))
print(scores_fig)
amulti_trees_19 = plotGrampaTrees(grampa_data_19 %>% filter(label == "ASTRAL-Multi") %>% slice_head(n=6), multi_hcsp_dups_19, "19 species")
#amulti_trees_16 = plotGrampaTrees(grampa_data_16 %>% filter(label == "ASTRAL-Multi") %>% slice_head(n=6), multi_hcsp_dups_16, "16 species")
amulti_trees_18 = plotGrampaTrees(grampa_data_18 %>% filter(label == "ASTRAL-Multi") %>% slice_head(n=6), multi_hcsp_dups_18, "19 species")
####################
#rlist = readGrampa(16, "astral-multi", 90, "hcsp", "ASTRAL-Multi")
#multi_hcsp_16 = rlist[[1]]; multi_hcsp_dups_16 = rlist[[2]]
rlist = readGrampa(16, "ballesteros", 90, "hcsp", "Ballesteros")
bal_hcsp_16 = rlist[[1]]; bal_hcsp_dups_16 = rlist[[2]]
rlist = readGrampa(16, "traditional", 90, "hcsp", "Horseshoe crabs sister")
trad_hcsp_16 = rlist[[1]]; trad_hcsp_dups_16 = rlist[[2]]
grampa_data_16 = rbind(bal_hcsp_16, trad_hcsp_16)
grampa_data_st_16 = grampa_data_16 %>% filter(mul.tree == 0)
grampa_data_auto_16 = grampa_data_16 %>% filter(h1.node == h2.node & mul.tree != 0)
cols = corecol(numcol=3, pal="wilke")
names(cols) = c("ASTRAL-Multi", "Ballesteros", "Horseshoe crabs sister")
####################
scores_fig_16 = ggplot(grampa_data_16, aes(x=rank, y=score, color=label)) +
geom_point(size=2, alpha=0.33, show.legend=F) +
geom_point(data=grampa_data_st_16, aes(x=rank, y=score), size=3, alpha=0.75, color="#333333", fill="#999999") +
geom_point(data=grampa_data_auto_16, aes(x=rank, y=score, color=label), size=5, alpha=0.5) +
scale_x_continuous(limits=c(-10,max(grampa_data_16$rank)+10)) +
scale_color_manual(values=cols) +
xlab("Rank") +
ylab("GRAMPA score") +
bartheme() +
theme(legend.position="bottom")
#print(scores_fig_16)
# Plot scores
####################
####################
rlist = readGrampa(18, "astral-multi", 90, "hcsp", "ASTRAL-Multi")
multi_hcsp_18 = rlist[[1]]; multi_hcsp_dups_18 = rlist[[2]]
rlist = readGrampa(18, "ballesteros", 90, "hcsp", "Ballesteros")
bal_hcsp_18 = rlist[[1]]; bal_hcsp_dups_18 = rlist[[2]]
rlist = readGrampa(18, "traditional", 90, "hcsp", "Horseshoe crabs sister")
trad_hcsp_18 = rlist[[1]]; trad_hcsp_dups_18 = rlist[[2]]
grampa_data_18 = rbind(multi_hcsp_18, bal_hcsp_18, trad_hcsp_18)
grampa_data_st_18 = grampa_data_18 %>% filter(mul.tree == 0)
grampa_data_auto_18 = grampa_data_18 %>% filter(h1.node == h2.node & mul.tree != 0)
cols = corecol(numcol=3, pal="wilke")
names(cols) = c("ASTRAL-Multi", "Ballesteros", "Horseshoe crabs sister")
####################
scores_fig_18 = ggplot(grampa_data_18, aes(x=rank, y=score, color=label)) +
geom_point(size=2, alpha=0.33, show.legend=F) +
geom_point(data=grampa_data_st_18, aes(x=rank, y=score), size=3, alpha=0.75, color="#333333", fill="#999999") +
geom_point(data=grampa_data_auto_18, aes(x=rank, y=score, color=label), size=5, alpha=0.5) +
scale_x_continuous(limits=c(-10,max(grampa_data_18$rank)+10)) +
scale_color_manual(values=cols) +
xlab("Rank") +
ylab("GRAMPA score") +
bartheme() +
theme(legend.position="bottom")
print(scores_fig_18)
# Plot scores
####################
####################
rlist = readGrampa(19, "astral-multi", 90, "hcsp", "ASTRAL-Multi")
multi_hcsp_19 = rlist[[1]]; multi_hcsp_dups_19 = rlist[[2]]
rlist = readGrampa(19, "ballesteros", 90, "hcsp", "Ballesteros")
bal_hcsp_19 = rlist[[1]]; bal_hcsp_dups_19 = rlist[[2]]
rlist = readGrampa(19, "traditional", 90, "hcsp", "Horseshoe crabs sister")
trad_hcsp_19 = rlist[[1]]; trad_hcsp_dups_19 = rlist[[2]]
grampa_data_19 = rbind(multi_hcsp_19, bal_hcsp_19, trad_hcsp_19)
grampa_data_st_19 = grampa_data_19 %>% filter(mul.tree == 0)
grampa_data_auto_19 = grampa_data_19 %>% filter(h1.node == h2.node & mul.tree != 0)
####################
scores_fig_19 = ggplot(grampa_data_19, aes(x=rank, y=score, color=label)) +
geom_point(size=2, alpha=0.33, show.legend=F) +
geom_point(data=grampa_data_st_19, aes(x=rank, y=score), size=3, alpha=0.75, color="#333333", fill="#999999") +
geom_point(data=grampa_data_auto_19, aes(x=rank, y=score, color=label), size=5, alpha=0.5) +
scale_x_continuous(limits=c(-10,max(grampa_data_19$rank)+10)) +
scale_color_manual(values=cols) +
xlab("Rank") +
ylab("GRAMPA score") +
bartheme() +
theme(legend.position="bottom")
#print(scores_fig_19)
# Plot scores
####################
leg = get_legend(scores_fig_19)
scores_fig_top = plot_grid(scores_fig_16 + theme(legend.position="none"),
scores_fig_18 + theme(legend.position="none"),
scores_fig_19 + theme(legend.position="none"),
ncol=3, labels=c("16 species", "18 species", "19 species"))
scores_fig = plot_grid(scores_fig_top, leg, nrow=2, rel_heights=c(1,0.1))
print(scores_fig)
#amulti_trees_16 = plotGrampaTrees(grampa_data_16 %>% filter(label == "ASTRAL-Multi") %>% slice_head(n=6), multi_hcsp_dups_16, "16 species")
amulti_trees_18 = plotGrampaTrees(grampa_data_18 %>% filter(label == "ASTRAL-Multi") %>% slice_head(n=6), multi_hcsp_dups_18, "18 species")
amulti_trees_19 = plotGrampaTrees(grampa_data_19 %>% filter(label == "ASTRAL-Multi") %>% slice_head(n=6), multi_hcsp_dups_19, "19 species")
print(amulti_trees_18)
# Combine and render figs
#amulti_trees_16 = plotGrampaTrees(grampa_data_16 %>% filter(label == "ASTRAL-Multi") %>% slice_head(n=6), multi_hcsp_dups_16, "16 species")
amulti_trees_18 = plotGrampaTrees(grampa_data_18 %>% filter(label == "ASTRAL-Multi") %>% slice_head(n=6), multi_hcsp_dups_18, "18 species")
amulti_trees_19 = plotGrampaTrees(grampa_data_19 %>% filter(label == "ASTRAL-Multi") %>% slice_head(n=6), multi_hcsp_dups_19, "19 species")
print(amulti_trees_18)
print(amulti_trees_19)
# Combine and render figs
<details><summary>Click here to see a breakdown the above command</summary>
bal_trees_16 = plotGrampaTrees(grampa_data_16 %>% filter(label == "Ballesteros") %>% slice_head(n=6), bal_hcsp_dups_16, "16 species")
bal_trees_18 = plotGrampaTrees(grampa_data_18 %>% filter(label == "Ballesteros") %>% slice_head(n=6), bal_hcsp_dups_18, "18 species")
bal_trees_19 = plotGrampaTrees(grampa_data_19 %>% filter(label == "Ballesteros") %>% slice_head(n=6), bal_hcsp_dups_19, "19 species")
print(bal_trees_16)
print(bal_trees_18)
print(bal_trees_19)
# Combine and render figs
trad_trees_16 = plotGrampaTrees(grampa_data_16 %>% filter(label == "Horseshoe crabs sister") %>% slice_head(n=6), trad_hcsp_dups_16, "16 species")
trad_trees_18 = plotGrampaTrees(grampa_data_18 %>% filter(label == "Horseshoe crabs sister") %>% slice_head(n=6), trad_hcsp_dups_18, "18 species")
trad_trees_19 = plotGrampaTrees(grampa_data_19 %>% filter(label == "Horseshoe crabs sister") %>% slice_head(n=6), trad_hcsp_dups_19, "19 species")
print(trad_trees_16)
print(trad_trees_18)
print(trad_trees_19)
# Combine and render figs
####################
rlist = readGrampa(16, "astral-multi", 90, "full", "ASTRAL-Multi")
multi_full_16 = rlist[[1]]; multi_full_dups_16 = rlist[[2]]
rlist = readGrampa(16, "ballesteros", 90, "full", "Ballesteros")
bal_full_16 = rlist[[1]]; bal_full_dups_16 = rlist[[2]]
rlist = readGrampa(16, "traditional", 90, "full", "Horseshoe crabs sister")
trad_full_16 = rlist[[1]]; trad_full_dups_16 = rlist[[2]]
grampa_data_16 = rbind(multi_full_16, bal_full_16, trad_full_16)
grampa_data_st_16 = grampa_data_16 %>% filter(mul.tree == 0)
grampa_data_auto_16 = grampa_data_16 %>% filter(h1.node == h2.node & mul.tree != 0)
####################
scores_fig_16 = ggplot(grampa_data_16, aes(x=rank, y=score, color=label)) +
geom_point(size=2, alpha=0.33, show.legend=F) +
geom_point(data=grampa_data_st_16, aes(x=rank, y=score), size=3, alpha=0.75, color="#333333", fill="#999999") +
geom_point(data=grampa_data_auto_16, aes(x=rank, y=score, color=label), size=5, alpha=0.5) +
scale_x_continuous(limits=c(-10,max(grampa_data_16$rank)+10)) +
scale_color_manual(values=cols) +
xlab("Rank") +
ylab("GRAMPA score") +
bartheme() +
theme(legend.position="bottom")
#print(scores_fig_16)
# Plot scores
####################
####################
rlist = readGrampa(18, "astral-multi", 90, "full", "ASTRAL-Multi")
multi_full_18 = rlist[[1]]; multi_full_dups_18 = rlist[[2]]
rlist = readGrampa(18, "ballesteros", 90, "full", "Ballesteros")
bal_full_18 = rlist[[1]]; bal_full_dups_18 = rlist[[2]]
rlist = readGrampa(18, "traditional", 90, "full", "Horseshoe crabs sister")
trad_full_18 = rlist[[1]]; trad_full_dups_18 = rlist[[2]]
grampa_data_18 = rbind(multi_full_18, bal_full_18, trad_full_18)
grampa_data_st_18 = grampa_data_18 %>% filter(mul.tree == 0)
grampa_data_auto_18 = grampa_data_18 %>% filter(h1.node == h2.node & mul.tree != 0)
####################
scores_fig_18 = ggplot(grampa_data_18, aes(x=rank, y=score, color=label)) +
geom_point(size=2, alpha=0.33, show.legend=F) +
geom_point(data=grampa_data_st_18, aes(x=rank, y=score), size=3, alpha=0.75, color="#333333", fill="#999999") +
geom_point(data=grampa_data_auto_18, aes(x=rank, y=score, color=label), size=5, alpha=0.5) +
scale_x_continuous(limits=c(-10,max(grampa_data_18$rank)+10)) +
scale_color_manual(values=cols) +
xlab("Rank") +
ylab("GRAMPA score") +
bartheme() +
theme(legend.position="bottom")
#print(scores_fig_16)
# Plot scores
####################
####################
rlist = readGrampa(19, "astral-multi", 90, "full", "ASTRAL-Multi")
multi_full_19 = rlist[[1]]; multi_full_dups_19 = rlist[[2]]
rlist = readGrampa(19, "ballesteros", 90, "full", "Ballesteros")
bal_full_19 = rlist[[1]]; bal_full_dups_19 = rlist[[2]]
rlist = readGrampa(19, "traditional", 90, "full", "Horseshoe crabs sister")
trad_full_19 = rlist[[1]]; trad_full_dups_19 = rlist[[2]]
grampa_data_19 = rbind(multi_full_19, bal_full_19, trad_full_19)
grampa_data_st_19 = grampa_data_19 %>% filter(mul.tree == 0)
grampa_data_auto_19 = grampa_data_19 %>% filter(h1.node == h2.node & mul.tree != 0)
####################
scores_fig_19 = ggplot(grampa_data_19, aes(x=rank, y=score, color=label)) +
geom_point(size=2, alpha=0.33, show.legend=F) +
geom_point(data=grampa_data_st_19, aes(x=rank, y=score), size=3, alpha=0.75, color="#333333", fill="#999999") +
geom_point(data=grampa_data_auto_19, aes(x=rank, y=score, color=label), size=5, alpha=0.5) +
scale_x_continuous(limits=c(-10,max(grampa_data_16$rank)+10)) +
scale_color_manual(values=cols) +
xlab("Rank") +
ylab("GRAMPA score") +
bartheme() +
theme(legend.position="bottom")
#print(scores_fig_19)
# Plot scores
####################
leg = get_legend(scores_fig_19)
scores_fig_top = plot_grid(scores_fig_16 + theme(legend.position="none"),
scores_fig_18 + theme(legend.position="none"),
scores_fig_19 + theme(legend.position="none"),
ncol=3, labels=c("16 species", "19species"))
scores_fig = plot_grid(scores_fig_top, leg, nrow=2, rel_heights=c(1,0.1))
print(scores_fig)
####################
rlist = readGrampa(16, "astral-multi", 90, "full", "ASTRAL-Multi")
multi_full_16 = rlist[[1]]; multi_full_dups_16 = rlist[[2]]
rlist = readGrampa(16, "ballesteros", 90, "full", "Ballesteros")
bal_full_16 = rlist[[1]]; bal_full_dups_16 = rlist[[2]]
rlist = readGrampa(16, "traditional", 90, "full", "Horseshoe crabs sister")
trad_full_16 = rlist[[1]]; trad_full_dups_16 = rlist[[2]]
grampa_data_16 = rbind(multi_full_16, bal_full_16, trad_full_16)
grampa_data_st_16 = grampa_data_16 %>% filter(mul.tree == 0)
grampa_data_auto_16 = grampa_data_16 %>% filter(h1.node == h2.node & mul.tree != 0)
####################
scores_fig_16 = ggplot(grampa_data_16, aes(x=rank, y=score, color=label)) +
geom_point(size=2, alpha=0.33, show.legend=F) +
geom_point(data=grampa_data_st_16, aes(x=rank, y=score), size=3, alpha=0.75, color="#333333", fill="#999999") +
geom_point(data=grampa_data_auto_16, aes(x=rank, y=score, color=label), size=5, alpha=0.5) +
scale_x_continuous(limits=c(-10,max(grampa_data_16$rank)+10)) +
scale_color_manual(values=cols) +
xlab("Rank") +
ylab("GRAMPA score") +
bartheme() +
theme(legend.position="bottom")
#print(scores_fig_16)
# Plot scores
####################
####################
rlist = readGrampa(18, "astral-multi", 90, "full", "ASTRAL-Multi")
multi_full_18 = rlist[[1]]; multi_full_dups_18 = rlist[[2]]
rlist = readGrampa(18, "ballesteros", 90, "full", "Ballesteros")
bal_full_18 = rlist[[1]]; bal_full_dups_18 = rlist[[2]]
rlist = readGrampa(18, "traditional", 90, "full", "Horseshoe crabs sister")
trad_full_18 = rlist[[1]]; trad_full_dups_18 = rlist[[2]]
grampa_data_18 = rbind(multi_full_18, bal_full_18, trad_full_18)
grampa_data_st_18 = grampa_data_18 %>% filter(mul.tree == 0)
grampa_data_auto_18 = grampa_data_18 %>% filter(h1.node == h2.node & mul.tree != 0)
####################
scores_fig_18 = ggplot(grampa_data_18, aes(x=rank, y=score, color=label)) +
geom_point(size=2, alpha=0.33, show.legend=F) +
geom_point(data=grampa_data_st_18, aes(x=rank, y=score), size=3, alpha=0.75, color="#333333", fill="#999999") +
geom_point(data=grampa_data_auto_18, aes(x=rank, y=score, color=label), size=5, alpha=0.5) +
scale_x_continuous(limits=c(-10,max(grampa_data_18$rank)+10)) +
scale_color_manual(values=cols) +
xlab("Rank") +
ylab("GRAMPA score") +
bartheme() +
theme(legend.position="bottom")
#print(scores_fig_16)
# Plot scores
####################
####################
rlist = readGrampa(19, "astral-multi", 90, "full", "ASTRAL-Multi")
multi_full_19 = rlist[[1]]; multi_full_dups_19 = rlist[[2]]
rlist = readGrampa(19, "ballesteros", 90, "full", "Ballesteros")
bal_full_19 = rlist[[1]]; bal_full_dups_19 = rlist[[2]]
rlist = readGrampa(19, "traditional", 90, "full", "Horseshoe crabs sister")
trad_full_19 = rlist[[1]]; trad_full_dups_19 = rlist[[2]]
grampa_data_19 = rbind(multi_full_19, bal_full_19, trad_full_19)
grampa_data_st_19 = grampa_data_19 %>% filter(mul.tree == 0)
grampa_data_auto_19 = grampa_data_19 %>% filter(h1.node == h2.node & mul.tree != 0)
####################
scores_fig_19 = ggplot(grampa_data_19, aes(x=rank, y=score, color=label)) +
geom_point(size=2, alpha=0.33, show.legend=F) +
geom_point(data=grampa_data_st_19, aes(x=rank, y=score), size=3, alpha=0.75, color="#333333", fill="#999999") +
geom_point(data=grampa_data_auto_19, aes(x=rank, y=score, color=label), size=5, alpha=0.5) +
scale_x_continuous(limits=c(-10,max(grampa_data_16$rank)+10)) +
scale_color_manual(values=cols) +
xlab("Rank") +
ylab("GRAMPA score") +
bartheme() +
theme(legend.position="bottom")
#print(scores_fig_19)
# Plot scores
####################
leg = get_legend(scores_fig_19)
scores_fig_top = plot_grid(scores_fig_16 + theme(legend.position="none"),
scores_fig_18 + theme(legend.position="none"),
scores_fig_19 + theme(legend.position="none"),
ncol=3, labels=c("16 species", "18 species", "19 species"))
scores_fig = plot_grid(scores_fig_top, leg, nrow=2, rel_heights=c(1,0.1))
print(scores_fig)
amulti_trees_16 = plotGrampaTrees(grampa_data_16 %>% filter(label == "ASTRAL-Multi") %>% slice_head(n=6), multi_full_dups_16, "16 species")
amulti_trees_18 = plotGrampaTrees(grampa_data_18 %>% filter(label == "ASTRAL-Multi") %>% slice_head(n=6), multi_full_dups_18, "18 species")
amulti_trees_19 = plotGrampaTrees(grampa_data_19 %>% filter(label == "ASTRAL-Multi") %>% slice_head(n=6), multi_full_dups_19, "19 species")
print(amulti_trees_16)
print(amulti_trees_18)
print(amulti_trees_19)
# Combine and render figs
bal_trees_16 = plotGrampaTrees(grampa_data_16 %>% filter(label == "Ballesteros") %>% slice_head(n=6), bal_full_dups_16, "16 species")
bal_trees_18 = plotGrampaTrees(grampa_data_18 %>% filter(label == "Ballesteros") %>% slice_head(n=6), bal_full_dups_18, "18 species")
bal_trees_19 = plotGrampaTrees(grampa_data_19 %>% filter(label == "Ballesteros") %>% slice_head(n=6), bal_full_dups_19, "19 species")
print(bal_trees_16)
print(bal_trees_18)
print(bal_trees_19)
# Combine and render figs
trad_trees_16 = plotGrampaTrees(grampa_data_16 %>% filter(label == "Horseshoe crabs sister") %>% slice_head(n=6), trad_full_dups_16, "16 species")
trad_trees_18 = plotGrampaTrees(grampa_data_18 %>% filter(label == "Horseshoe crabs sister") %>% slice_head(n=6), trad_full_dups_18, "18 species")
trad_trees_19 = plotGrampaTrees(grampa_data_19 %>% filter(label == "Horseshoe crabs sister") %>% slice_head(n=6), trad_full_dups_19, "19 species")
print(trad_trees_16)
print(trad_trees_18)
print(trad_trees_19)
# Combine and render figs
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
#library(ggplot2)
library(tidyverse)
library(cowplot)
library(ggsignif)
library(here)
library("ggtree")
library(eulerr)
source(here("scripts", "lib", "design.r"))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
#library(ggplot2)
library(tidyverse)
library(cowplot)
library(ggsignif)
library(here)
library("ggtree")
library(eulerr)
source(here("scripts", "lib", "design.r"))
total_spec = 6
window_size = 10
# Window size in kb
max_tree_rank = 3
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
#library(ggplot2)
library(tidyverse)
library(cowplot)
library(ggsignif)
library(here)
library("ggtree")
library(eulerr)
source(here("scripts", "lib", "design.r"))
total_spec = 6
window_size = 10
# Window size in kb
max_tree_rank = 3
infile = here("data", paste0(window_size, "kb-topo-counts.csv"))
all_windows = read.csv(infile, header=T, comment.char="#")
all_windows = all_windows[order(-all_windows$end), ]
all_windows_f = subset(all_windows, filter=="PASS")
# Window trees file
aln_stats_file = here("data", paste0("mm10-", window_size, "kb-window-stats.tsv"))
aln_stats = read.csv(aln_stats_file, header=T, comment.char="#", sep="\t")
aln_stats$window <- gsub('.noanc', '', aln_stats$window)
# Window alignment stats
spec_counts_file = here("data", "get-windows-spec-counts.txt")
spec_counts = read.csv(spec_counts_file, header=F, sep="\t")
# Window spec counts
spec_counts
presence = aln_stats %>% filter(total.seqs.filter != 6)
unique_seqs = aln_stats %>% filter(uniq.seqs.filter < 4)
missing = aln_stats %>% filter(sites.all.missing.gap == 0)
filters = list("Presence" = presence$window,
"Unique"   = unique_seqs$window,
"Missing"  = missing$window)
plot(euler(filters), quantities=T, fills=corecol(pal="wilke", numcol=3, offset=1))
print(paste0("WINDOWS BEFORE FILTERING: ", nrow(all_windows)))
print(paste0("WINDOWS AFTER  FILTERING: ", nrow(all_windows_f)))
spec_counts$missing = nrow(all_windows) - spec_counts$count
names(spec_counts) = c("spec", "count")
spec_counts$missing = nrow(all_windows) - spec_counts$count
p = ggplot(spec_counts, aes(x=missing)) +
geom_histogram(stat="count", fill=corecol(pal="wilke", numcol=1, offset=6)) +
scale_x_continuous(breaks=1:6) +
scale_y_continuous(expand=c(0, 0)) +
xlab("Sequences") +
ylab("# of windows") +
bartheme()
print(p)
p = ggplot(spec_counts, aes(x=missing)) +
geom_histogram(stat="count", fill=corecol(pal="wilke", numcol=1, offset=6)) +
#scale_x_continuous(breaks=1:6) +
scale_y_continuous(expand=c(0, 0)) +
xlab("Sequences") +
ylab("# of windows") +
bartheme()
print(p)
spec_counts
p = ggplot(spec_counts, aes(x=spec, y=missing)) +
geom_histogram(stat="count", fill=corecol(pal="wilke", numcol=1, offset=6)) +
#scale_x_continuous(breaks=1:6) +
scale_y_continuous(expand=c(0, 0)) +
xlab("Sequences") +
ylab("# of windows") +
bartheme()
print(p)
p = ggplot(spec_counts, aes(x=spec, y=missing)) +
geom_boxplot(fill=corecol(pal="wilke", numcol=1, offset=6)) +
#scale_x_continuous(breaks=1:6) +
scale_y_continuous(expand=c(0, 0)) +
xlab("Sequences") +
ylab("# of windows") +
bartheme()
print(p)
p = ggplot(spec_counts, aes(x=spec, y=missing)) +
geom_barplot(fill=corecol(pal="wilke", numcol=1, offset=6)) +
#scale_x_continuous(breaks=1:6) +
scale_y_continuous(expand=c(0, 0)) +
xlab("Sequences") +
ylab("# of windows") +
bartheme()
p = ggplot(spec_counts, aes(x=spec, y=missing)) +
geom_bar(fill=corecol(pal="wilke", numcol=1, offset=6)) +
#scale_x_continuous(breaks=1:6) +
scale_y_continuous(expand=c(0, 0)) +
xlab("Sequences") +
ylab("# of windows") +
bartheme()
print(p)
p = ggplot(spec_counts, aes(x=spec, y=missing)) +
geom_bar(fill=corecol(pal="wilke", numcol=1, offset=6)) +
#scale_x_continuous(breaks=1:6) +
scale_y_continuous(expand=c(0, 0)) +
#xlab("Sequences") +
#ylab("# of windows") +
bartheme()
print(p)
p = ggplot(spec_counts, aes(x=spec, y=missing)) +
geom_bar(stat="identity", fill=corecol(pal="wilke", numcol=1, offset=6)) +
#scale_x_continuous(breaks=1:6) +
scale_y_continuous(expand=c(0, 0)) +
#xlab("Sequences") +
#ylab("# of windows") +
bartheme()
print(p)
p = ggplot(spec_counts, aes(x=spec, y=missing)) +
geom_bar(stat="identity", fill=corecol(pal="wilke", numcol=1, offset=6)) +
#scale_x_continuous(breaks=1:6) +
scale_y_continuous(expand=c(0, 0)) +
xlab("") +
ylab("Missing in windows") +
bartheme()
print(p)
source("C:/bin/mus-t-haplotype/scripts/chromoplot.r")
corecol
corecol(info=T)
corecol(pal="trek", info=T)
